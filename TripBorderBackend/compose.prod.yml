# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
networks:
  backend-network:
    name: tripborderdbbackend-network
    external: true

services:
  server:
    build: .
    expose:
    - "7777"
    volumes:
      - ./ssl:/ssl
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_USER: nientaiho
      DB_NAME: tripborderdb
      SSL_CERTIFICATE_PATH: /ssl/tripborderdbservercert.pem
      SSL_PRIVATE_KEY_PATH: /ssl/tripborderdbserverkey.pem
    env_file:
      - .env.production
    secrets:
      - db_password
    networks:
      - backend-network
    depends_on:
      - db

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: nientaiho
      POSTGRES_DB: tripborderdb
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:7777/"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports: 
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/${NGINX_CONF:-dev.conf}:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - backend-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - server

  # cloudflared:
  #   image: cloudflare/cloudflared:latest
  #   command: tunnel --no-autoupdate run --token ${TUNNEL_TOKEN}
  #   environment:
  #     - TUNNEL_TOKEN=${TUNNEL_TOKEN}
  #   depends_on:
  #     - nginx
  #   networks:
  #     - backend-network
      
secrets:
  db_password:
    file: ./secrets/db_password.txt

volumes:
  postgres_data: # Define the named volume here
