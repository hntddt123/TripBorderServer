# HTTP to HTTPS redirection
server {
    listen 80;
    listen [::]:80;
    server_name api.tripborder.com;  # Replace with your actual domain
    return 301 https://$host$request_uri;  # Redirect all HTTP traffic to HTTPS
}

# HTTPS server block
server {
    listen 443 ssl;
    listen [::]:443;
    server_name api.tripborder.com;  # Replace with your actual domain

    # SSL certificate PATH configuration
    ssl_certificate /etc/nginx/ssl/tripborderbackend-cert.pem;  
    ssl_certificate_key /etc/nginx/ssl/tripborderbackend-key.pem;  
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Security headers for enhanced protection
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Proxy all requests to the Express server
    location / {
        proxy_pass https://serverprod:7777;  # Proxy to the server service on port 7777
        proxy_set_header Host $host;  # Preserve the original host header
        proxy_set_header X-Real-IP $remote_addr;  # Pass client IP to the server
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward client IP chain
        proxy_set_header X-Forwarded-Proto $scheme;  # Indicate the protocol (http or https)
    }

    # Prevent direct access to database-related paths (optional)
    location /db {
        deny all;
        return 404;
    }

    location /nominatim/ {
        proxy_set_header X-Forwarded-For $remote_addr;  # Preserves client IP (for logging/security; $remote_addr is Nginx var for original IP).
        proxy_set_header Host $http_host;  # Passes original host header (ensures Nominatim sees correct domain).
        proxy_pass http://nominatim:8080/;  # Forwards requests to Nominatim (service name resolution via Docker network; appends path, e.g., /search?q=Paris).
    }
}